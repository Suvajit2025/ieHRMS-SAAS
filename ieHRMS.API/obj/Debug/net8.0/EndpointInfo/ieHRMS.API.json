{
  "openapi": "3.0.1",
  "info": {
    "title": "ieHRMS API",
    "description": "API documentation for ieHRMS",
    "version": "v1"
  },
  "paths": {
    "/Auth/Candidate-SignUp": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Auth/validation": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerifyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerifyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Auth/Candidate-SignIn": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Career/Get-Candidate": {
      "get": {
        "tags": [
          "Career"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginDetailsModel": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "locationName": {
            "type": "string",
            "nullable": true
          },
          "postId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "postName": {
            "type": "string",
            "nullable": true
          },
          "jobId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignUp": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "loginDetailsModel": {
            "$ref": "#/components/schemas/LoginDetailsModel"
          },
          "tenantSettings": {
            "$ref": "#/components/schemas/TenantSettings"
          }
        },
        "additionalProperties": false
      },
      "TenantSettings": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantCode": {
            "type": "string",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "tenantType": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "applicationCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenVerifyRequest": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantCode": {
            "type": "string",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "tenantType": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "applicationCode": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter JWT token in the format: Bearer {your token}",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}